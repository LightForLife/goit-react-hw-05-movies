{"version":3,"file":"static/js/247.bbf3ba27.chunk.js","mappings":"sUAEMA,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAyBC,EAAzB,+BAA+B,GAAIC,EAAnC,+BAA4C,CAAC,EAA7C,SACyBC,EAAAA,GAAAA,IAAUF,EAAKC,GADxC,cACQE,EADR,yBAESA,EAASC,KAAKC,SAFvB,mEAKO,SAASC,IACd,OAAOP,EAAU,GAAD,OAAIF,EAAJ,uCAA2CC,GAC5D,CAEM,SAASS,EAAkBC,GAChC,OAAOT,EAAU,GAAD,OACXF,EADW,gCACqBC,EADrB,kBACkCU,EADlC,uCAGjB,CAEM,SAASC,EAAmBC,GACjC,OAAOX,EAAU,GAAD,OACXF,EADW,kBACOa,EADP,4BACkCZ,EADlC,oBAGjB,CAEM,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAkCD,GAAlC,yFACkBR,EAAAA,GAAAA,IAAA,UAClBL,EADkB,iBACDa,EADC,oBACkBZ,EADlB,oBADlB,cACCK,EADD,OAICS,EAAST,EAASC,KAJnB,kBAKEQ,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFACkBR,EAAAA,GAAAA,IAAA,UAClBL,EADkB,iBACDa,EADC,4BAC0BZ,EAD1B,oBADlB,cACCK,EADD,OAICS,EAAST,EAASC,KAAKU,KAJxB,kBAKEF,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,yFACkBR,EAAAA,GAAAA,IAAA,UAClBL,EADkB,iBACDa,EADC,oBACkBZ,EADlB,oBADlB,cACCK,EADD,OAICa,EAAab,EAASC,KAAKa,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAJ5C,kBAKEJ,GALF,kE,yGCIP,UA1Cc,WACZ,IAAQN,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA0BY,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAeC,EAAAA,EAAAA,cAAW,iBAAC,oGAE7BJ,GAAa,GAFgB,UAGTb,EAAAA,EAAAA,IAAgBH,GAHP,OAGvBa,EAHuB,OAI7BC,EAASD,GAJoB,gDAM7BK,EAAS,0BANoB,yBAQ7BF,GAAa,GARgB,4EAU9B,CAAChB,IAMJ,OAJAqB,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,KAGF,4BACE,iCACEJ,GAWA,wCAVCE,GAOC,yBAAMA,KANN,wBACGJ,EAAML,KAAI,SAAAJ,GAAI,OACb,wBAAmBA,EAAKM,MAAfN,EAAKkB,GADD,QAY1B,C","sources":["Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'dc4ab5f19e3eea083dd36e20fcfaec1f';\n\nasync function getMovies(url = '', params = {}) {\n  const response = await axios.get(url, params);\n  return response.data.results;\n}\n\nexport function fetchTrendMovie() {\n  return getMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovies(query) {\n  return getMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMoviesReviews(movieId) {\n  return getMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport async function fetchMoviesDetails(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  const result = response.data;\n  return result;\n}\n\nexport async function fetchMoviesCast(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const result = response.data.cast;\n  return result;\n}\n\nexport async function fetchMoviesGenres(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  const filmGenres = response.data.genres.map(genre => genre.name);\n  return filmGenres;\n}\n","import { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'Api';\nimport { useState, useEffect, useCallback } from 'react';\n\nconst Casts = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getFilmsCast = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const casts = await fetchMoviesCast(movieId);\n      setCasts(casts);\n    } catch {\n      setError('Failed to load cast :(');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getFilmsCast();\n  }, [getFilmsCast]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {!isLoading ? (\n        !error ? (\n          <ul>\n            {casts.map(cast => (\n              <li key={cast.id}>{cast.name}</li>\n            ))}\n          </ul>\n        ) : (\n          <div>{error}</div>\n        )\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default Casts;\n"],"names":["BASE_URL","KEY","getMovies","url","params","axios","response","data","results","fetchTrendMovie","fetchSearchMovies","query","fetchMoviesReviews","movieId","fetchMoviesDetails","result","fetchMoviesCast","cast","fetchMoviesGenres","filmGenres","genres","map","genre","name","useParams","useState","casts","setCasts","isLoading","setIsLoading","error","setError","getFilmsCast","useCallback","useEffect","id"],"sourceRoot":""}